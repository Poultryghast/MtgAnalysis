library("meanShiftR")
library("analogue")
library(stats)

cluster <- function(cardsets)
{
	clusters <- vector("list", length=length(cardsets))
	for(i in 1:length(cardsets))
	{
		features <- cardfeatures(cardsets[[i]])
		clusters[[i]] <- meanShift(features, bandwidth = rep(0.05 , ncol(features)))$assignment
	}
	return(clusters)
}

cardfeatures <- function(cardset)
{
	mboard <- cardset$mboard
	sboard <- cardset$sboard
	
	ucards <- unique(unlist(c(mboard, sboard), recursive = FALSE))
	cardtable <- matrix(nrow=length(mboard), ncol=length(ucards))
	colnames(cardtable) <- ucards
	
	for(j in 1:length(mboard))
	{
		cardtable[j,] <- table(c(ucards, mboard[[j]], sboard[[j]])) - 1
	}
		
	chi <- distance(cardtable, method = "chi.square")
	return(topfeatures(chi))
}

topfeatures <- function(d, pvar=0.9)
{
	G <- dist2gram(d)
	SG <- svd(G)
	V <- SG$d ^ 2
	P <- V / sum(V)
	R <- min(which(cumsum(P) > pvar))
	return(SG$u[,1:R])
}

dist2gram <- function(d)
{
	d2 <- d^2
	C <- diag(nrow(d2)) - 1/nrow(d2)
	return(-0.5 * C %*% d2 %*% C)
}